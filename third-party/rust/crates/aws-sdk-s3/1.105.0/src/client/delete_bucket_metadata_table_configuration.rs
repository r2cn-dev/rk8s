// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteBucketMetadataTableConfiguration`](crate::operation::delete_bucket_metadata_table_configuration::builders::DeleteBucketMetadataTableConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::operation::delete_bucket_metadata_table_configuration::builders::DeleteBucketMetadataTableConfigurationFluentBuilder::bucket) / [`set_bucket(Option<String>)`](crate::operation::delete_bucket_metadata_table_configuration::builders::DeleteBucketMetadataTableConfigurationFluentBuilder::set_bucket):<br>required: **true**<br><p>The general purpose bucket that you want to remove the metadata table configuration from.</p><br>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::operation::delete_bucket_metadata_table_configuration::builders::DeleteBucketMetadataTableConfigurationFluentBuilder::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::operation::delete_bucket_metadata_table_configuration::builders::DeleteBucketMetadataTableConfigurationFluentBuilder::set_expected_bucket_owner):<br>required: **false**<br><p>The expected bucket owner of the general purpose bucket that you want to remove the metadata table configuration from.</p><br>
    /// - On success, responds with [`DeleteBucketMetadataTableConfigurationOutput`](crate::operation::delete_bucket_metadata_table_configuration::DeleteBucketMetadataTableConfigurationOutput)
    /// - On failure, responds with [`SdkError<DeleteBucketMetadataTableConfigurationError>`](crate::operation::delete_bucket_metadata_table_configuration::DeleteBucketMetadataTableConfigurationError)
    pub fn delete_bucket_metadata_table_configuration(
        &self,
    ) -> crate::operation::delete_bucket_metadata_table_configuration::builders::DeleteBucketMetadataTableConfigurationFluentBuilder {
        crate::operation::delete_bucket_metadata_table_configuration::builders::DeleteBucketMetadataTableConfigurationFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
