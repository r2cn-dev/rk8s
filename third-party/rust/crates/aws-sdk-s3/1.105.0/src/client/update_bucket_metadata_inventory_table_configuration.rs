// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateBucketMetadataInventoryTableConfiguration`](crate::operation::update_bucket_metadata_inventory_table_configuration::builders::UpdateBucketMetadataInventoryTableConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::operation::update_bucket_metadata_inventory_table_configuration::builders::UpdateBucketMetadataInventoryTableConfigurationFluentBuilder::bucket) / [`set_bucket(Option<String>)`](crate::operation::update_bucket_metadata_inventory_table_configuration::builders::UpdateBucketMetadataInventoryTableConfigurationFluentBuilder::set_bucket):<br>required: **true**<br><p>The general purpose bucket that corresponds to the metadata configuration that you want to enable or disable an inventory table for.</p><br>
    ///   - [`content_md5(impl Into<String>)`](crate::operation::update_bucket_metadata_inventory_table_configuration::builders::UpdateBucketMetadataInventoryTableConfigurationFluentBuilder::content_md5) / [`set_content_md5(Option<String>)`](crate::operation::update_bucket_metadata_inventory_table_configuration::builders::UpdateBucketMetadataInventoryTableConfigurationFluentBuilder::set_content_md5):<br>required: **false**<br><p>The <code>Content-MD5</code> header for the inventory table configuration.</p><br>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::operation::update_bucket_metadata_inventory_table_configuration::builders::UpdateBucketMetadataInventoryTableConfigurationFluentBuilder::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::operation::update_bucket_metadata_inventory_table_configuration::builders::UpdateBucketMetadataInventoryTableConfigurationFluentBuilder::set_checksum_algorithm):<br>required: **false**<br><p>The checksum algorithm to use with your inventory table configuration.</p><br>
    ///   - [`inventory_table_configuration(InventoryTableConfigurationUpdates)`](crate::operation::update_bucket_metadata_inventory_table_configuration::builders::UpdateBucketMetadataInventoryTableConfigurationFluentBuilder::inventory_table_configuration) / [`set_inventory_table_configuration(Option<InventoryTableConfigurationUpdates>)`](crate::operation::update_bucket_metadata_inventory_table_configuration::builders::UpdateBucketMetadataInventoryTableConfigurationFluentBuilder::set_inventory_table_configuration):<br>required: **true**<br><p>The contents of your inventory table configuration.</p><br>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::operation::update_bucket_metadata_inventory_table_configuration::builders::UpdateBucketMetadataInventoryTableConfigurationFluentBuilder::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::operation::update_bucket_metadata_inventory_table_configuration::builders::UpdateBucketMetadataInventoryTableConfigurationFluentBuilder::set_expected_bucket_owner):<br>required: **false**<br><p>The expected owner of the general purpose bucket that corresponds to the metadata table configuration that you want to enable or disable an inventory table for.</p><br>
    /// - On success, responds with [`UpdateBucketMetadataInventoryTableConfigurationOutput`](crate::operation::update_bucket_metadata_inventory_table_configuration::UpdateBucketMetadataInventoryTableConfigurationOutput)
    /// - On failure, responds with [`SdkError<UpdateBucketMetadataInventoryTableConfigurationError>`](crate::operation::update_bucket_metadata_inventory_table_configuration::UpdateBucketMetadataInventoryTableConfigurationError)
    pub fn update_bucket_metadata_inventory_table_configuration(
        &self,
    ) -> crate::operation::update_bucket_metadata_inventory_table_configuration::builders::UpdateBucketMetadataInventoryTableConfigurationFluentBuilder
    {
        crate::operation::update_bucket_metadata_inventory_table_configuration::builders::UpdateBucketMetadataInventoryTableConfigurationFluentBuilder::new(self.handle.clone())
    }
}
