# @generated by `cargo buckal`

load("@prelude//rust:cargo_buildscript.bzl", "buildscript_run")
load("@prelude//rust:cargo_package.bzl", "cargo")

cargo.rust_library(
    name = "futures-intrusive-0.5.0",
    srcs = glob(
        include = ["**/**"],
        exclude = ["BUCK"],
    ),
    crate = "futures-intrusive",
    crate_root = "src/lib.rs",
    edition = "2018",
    env = {
        "CARGO_CRATE_NAME": "futures-intrusive",
        "CARGO_MANIFEST_DIR": ".",
        "CARGO_PKG_AUTHORS": "Matthias Einwag <matthias.einwag@live.com>",
        "CARGO_PKG_DESCRIPTION": "Futures based on intrusive data structures - for std and no-std environments.\n",
        "CARGO_PKG_NAME": "futures-intrusive",
        "CARGO_PKG_REPOSITORY": "https://github.com/Matthias247/futures-intrusive",
        "CARGO_PKG_VERSION": "0.5.0",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "5",
        "CARGO_PKG_VERSION_PATCH": "0",
        "CARGO_PKG_VERSION_PRE": "",
    },
    features = [
        "alloc",
        "default",
        "parking_lot",
        "std",
    ],
    named_deps = {
        "futures_core": "//third-party/rust/crates/futures-core-0.3.31:futures-core-0.3.31",
    },
    visibility = ["PUBLIC"],
    deps = [
        "//third-party/rust/crates/lock_api-0.4.13:lock_api-0.4.13",
        "//third-party/rust/crates/parking_lot-0.12.4:parking_lot-0.12.4",
    ],
)
