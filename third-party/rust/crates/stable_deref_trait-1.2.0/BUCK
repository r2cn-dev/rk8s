# @generated by `cargo buckal`

load("@prelude//rust:cargo_buildscript.bzl", "buildscript_run")
load("@prelude//rust:cargo_package.bzl", "cargo")

cargo.rust_library(
    name = "stable_deref_trait-1.2.0",
    srcs = glob(
        include = ["**/**"],
        exclude = ["BUCK"],
    ),
    crate = "stable_deref_trait",
    crate_root = "src/lib.rs",
    edition = "2015",
    env = {
        "CARGO_CRATE_NAME": "stable_deref_trait",
        "CARGO_MANIFEST_DIR": ".",
        "CARGO_PKG_AUTHORS": "Robert Grosse <n210241048576@gmail.com>",
        "CARGO_PKG_DESCRIPTION": "An unsafe marker trait for types like Box and Rc that dereference to a stable address even when moved, and hence can be used with libraries such as owning_ref and rental.\n",
        "CARGO_PKG_NAME": "stable_deref_trait",
        "CARGO_PKG_REPOSITORY": "https://github.com/storyyeller/stable_deref_trait",
        "CARGO_PKG_VERSION": "1.2.0",
        "CARGO_PKG_VERSION_MAJOR": "1",
        "CARGO_PKG_VERSION_MINOR": "2",
        "CARGO_PKG_VERSION_PATCH": "0",
        "CARGO_PKG_VERSION_PRE": "",
    },
    features = ["alloc"],
    visibility = ["PUBLIC"],
)
