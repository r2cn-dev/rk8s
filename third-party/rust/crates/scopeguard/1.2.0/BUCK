# @generated by `cargo buckal`

load("@prelude//rust:cargo_buildscript.bzl", "buildscript_run")
load("@prelude//rust:cargo_package.bzl", "cargo")

cargo.rust_library(
    name = "scopeguard-1.2.0",
    srcs = glob(
        include = ["**/**"],
        exclude = ["BUCK"],
    ),
    crate = "scopeguard",
    crate_root = "src/lib.rs",
    edition = "2015",
    env = {
        "CARGO_CRATE_NAME": "scopeguard",
        "CARGO_MANIFEST_DIR": ".",
        "CARGO_PKG_AUTHORS": "bluss",
        "CARGO_PKG_DESCRIPTION": "A RAII scope guard that will run a given closure when it goes out of scope,\neven if the code between panics (assuming unwinding panic).\n\nDefines the macros `defer!`, `defer_on_unwind!`, `defer_on_success!` as\nshorthands for guards with one of the implemented strategies.\n",
        "CARGO_PKG_NAME": "scopeguard",
        "CARGO_PKG_REPOSITORY": "https://github.com/bluss/scopeguard",
        "CARGO_PKG_VERSION": "1.2.0",
        "CARGO_PKG_VERSION_MAJOR": "1",
        "CARGO_PKG_VERSION_MINOR": "2",
        "CARGO_PKG_VERSION_PATCH": "0",
        "CARGO_PKG_VERSION_PRE": "",
    },
    features = [
        "default",
        "use_std",
    ],
    visibility = ["PUBLIC"],
)
