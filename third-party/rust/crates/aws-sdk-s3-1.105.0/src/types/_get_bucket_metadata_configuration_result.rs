// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The S3 Metadata configuration for a general purpose bucket.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetBucketMetadataConfigurationResult {
    /// <p>The metadata configuration for a general purpose bucket.</p>
    pub metadata_configuration_result: ::std::option::Option<crate::types::MetadataConfigurationResult>,
}
impl GetBucketMetadataConfigurationResult {
    /// <p>The metadata configuration for a general purpose bucket.</p>
    pub fn metadata_configuration_result(&self) -> ::std::option::Option<&crate::types::MetadataConfigurationResult> {
        self.metadata_configuration_result.as_ref()
    }
}
impl GetBucketMetadataConfigurationResult {
    /// Creates a new builder-style object to manufacture [`GetBucketMetadataConfigurationResult`](crate::types::GetBucketMetadataConfigurationResult).
    pub fn builder() -> crate::types::builders::GetBucketMetadataConfigurationResultBuilder {
        crate::types::builders::GetBucketMetadataConfigurationResultBuilder::default()
    }
}

/// A builder for [`GetBucketMetadataConfigurationResult`](crate::types::GetBucketMetadataConfigurationResult).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetBucketMetadataConfigurationResultBuilder {
    pub(crate) metadata_configuration_result: ::std::option::Option<crate::types::MetadataConfigurationResult>,
}
impl GetBucketMetadataConfigurationResultBuilder {
    /// <p>The metadata configuration for a general purpose bucket.</p>
    /// This field is required.
    pub fn metadata_configuration_result(mut self, input: crate::types::MetadataConfigurationResult) -> Self {
        self.metadata_configuration_result = ::std::option::Option::Some(input);
        self
    }
    /// <p>The metadata configuration for a general purpose bucket.</p>
    pub fn set_metadata_configuration_result(mut self, input: ::std::option::Option<crate::types::MetadataConfigurationResult>) -> Self {
        self.metadata_configuration_result = input;
        self
    }
    /// <p>The metadata configuration for a general purpose bucket.</p>
    pub fn get_metadata_configuration_result(&self) -> &::std::option::Option<crate::types::MetadataConfigurationResult> {
        &self.metadata_configuration_result
    }
    /// Consumes the builder and constructs a [`GetBucketMetadataConfigurationResult`](crate::types::GetBucketMetadataConfigurationResult).
    pub fn build(self) -> crate::types::GetBucketMetadataConfigurationResult {
        crate::types::GetBucketMetadataConfigurationResult {
            metadata_configuration_result: self.metadata_configuration_result,
        }
    }
}
